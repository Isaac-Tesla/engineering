apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configmap.kubernetes.pod_template_name }}
data:
  {{ .Values.configmap.kubernetes.pod_template_file }}: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: dummy-pod-name
      labels:
        tier: airflow
        component: worker

    spec:
      containers:
        - args: []
          command: []
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: {{ .Values.configmap.core.sql_alchemy_conn }}
            - name: AIRFLOW_CONN_AIRFLOW_DB
              value: {{ .Values.configmap.core.sql_alchemy_conn }}
            - name: AIRFLOW__CORE__DAGS_FOLDER
              value: {{ .Values.airflow.home }}/dags
            - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
              value: {{ .Values.airflow.home }}/logs
          envFrom: []
          image: dummy_image
          imagePullPolicy: IfNotPresent
          name: base
          ports: []
          volumeMounts:
          - name: airflow-dags
            mountPath: {{ .Values.airflow.home }}/dags
            readOnly: true
          - name: airflow-logs
            mountPath: {{ .Values.airflow.home }}/logs
      hostNetwork: false
      restartPolicy: Never
      securityContext:
        runAsUser: 50000
        fsGroup: 50000
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      serviceAccountName: {{ .Values.airflow.serviceAccount.name }} 
      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: {{ .Values.airflow.storage.claim }}
        - name: airflow-logs
          emptyDir: {}
